{"version":3,"sources":["cmps/Loop/Loop.jsx","assets/audio/Bass.mp3","assets/audio/electricGuitar.mp3","assets/audio/future_funk_beats.mp3","assets/audio/GrooveTanggu.mp3","assets/audio/MazePolitics.mp3","assets/audio/PAS3GROOVE1.mp3","assets/audio/SilentStarOrganSynth.mp3","assets/audio/StompySlosh.mp3","assets/audio/StutterBreakbeats.mp3","cmps/Pads/Pads.jsx","pages/Home/Home.jsx","cmps/Header/Header.jsx","pages/About/About.jsx","App.js","reportWebVitals.js","index.js"],"names":["Loop","padsData","padsArr","setPadsArr","id","className","isPlay","onClick","e","newArr","map","data","sound","handleClick","target","icon","Pads","useState","isPlaying","setIsPlaying","soundsOn","setSoundsOn","isLoopEnd","setIsLoopEnd","bass","Howl","src","Bass","electricGuitar","ElectricGuitar","futureFunkBeats","FutureFunkBeats","grooveTanggu","GrooveTanggu","mazePolitics","MazePolitics","pasGroove","PasGroove","silentStarOrganSynth","SilentStarOrganSynth","stompySlosh","StompySlosh","stutterBreakbeats","StutterBreakbeats","GiGuitar","SiElectron","GiOilDrum","GiVortex","GiMusicalKeyboard","FaGuitar","GiGasMask","FaRegClock","GiDrum","pads","setPads","useEffect","pressPlay","nextLoop","filter","pad","playing","forEach","howl","stop","once","play","index","Home","Header","props","exact","to","activeClassName","About","Component","App","component","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7bd35e2.chunk.js","sourcesContent":["import './Loop.scss';\nimport React from 'react';\n\nexport const Loop = ({ padsData, padsArr, setPadsArr }) => {\n  const handleClick = () => {\n    let newArr = padsArr.map((data) => {\n      data.sound === padsData.sound && (data.isPlay = !data.isPlay);\n      return data;\n    });\n    setPadsArr(newArr);\n  };\n\n  return (\n    <div\n      id=\"pad\"\n      className={padsData.isPlay ? 'play-on sample' : 'play-off sample'}\n      onClick={(e) => {\n        handleClick(e.target);\n      }}\n    >\n      <padsData.icon id=\"icon\" className=\"icon-music\" />\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/Bass.52c24c81.mp3\";","export default __webpack_public_path__ + \"static/media/electricGuitar.230fcab8.mp3\";","export default __webpack_public_path__ + \"static/media/future_funk_beats.5eb417fc.mp3\";","export default __webpack_public_path__ + \"static/media/GrooveTanggu.3e1411b4.mp3\";","export default __webpack_public_path__ + \"static/media/MazePolitics.2d08c654.mp3\";","export default __webpack_public_path__ + \"static/media/PAS3GROOVE1.f77c6da4.mp3\";","export default __webpack_public_path__ + \"static/media/SilentStarOrganSynth.f2d668af.mp3\";","export default __webpack_public_path__ + \"static/media/StompySlosh.27bdc145.mp3\";","export default __webpack_public_path__ + \"static/media/StutterBreakbeats.37c82282.mp3\";","import './Pads.scss';\nimport React, { useState, useEffect } from 'react';\nimport { Howl } from 'howler';\nimport { Loop } from '../Loop';\nimport { FaRegClock, FaGuitar, FaStop, FaPlay } from 'react-icons/fa';\nimport {\n  GiGuitar,\n  GiDrum,\n  GiVortex,\n  GiMusicalKeyboard,\n  GiOilDrum,\n  GiGasMask,\n} from 'react-icons/gi';\nimport { SiElectron } from 'react-icons/si';\nimport Bass from '../../assets/audio/Bass.mp3';\nimport ElectricGuitar from '../../assets/audio/electricGuitar.mp3';\nimport FutureFunkBeats from '../../assets/audio//future_funk_beats.mp3';\nimport GrooveTanggu from '../../assets/audio//GrooveTanggu.mp3';\nimport MazePolitics from '../../assets/audio//MazePolitics.mp3';\nimport PasGroove from '../../assets/audio//PAS3GROOVE1.mp3';\nimport SilentStarOrganSynth from '../../assets/audio/SilentStarOrganSynth.mp3';\nimport StompySlosh from '../../assets/audio//StompySlosh.mp3';\nimport StutterBreakbeats from '../../assets/audio//StutterBreakbeats.mp3';\n\nexport const Pads = () => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [soundsOn, setSoundsOn] = useState([]);\n  const [isLoopEnd, setIsLoopEnd] = useState(false);\n\n  const bass = new Howl({\n    src: [Bass],\n  });\n  const electricGuitar = new Howl({\n    src: [ElectricGuitar],\n  });\n  const futureFunkBeats = new Howl({\n    src: [FutureFunkBeats],\n  });\n  const grooveTanggu = new Howl({\n    src: [GrooveTanggu],\n  });\n  const mazePolitics = new Howl({\n    src: [MazePolitics],\n  });\n  const pasGroove = new Howl({\n    src: [PasGroove],\n  });\n  const silentStarOrganSynth = new Howl({\n    src: [SilentStarOrganSynth],\n  });\n  const stompySlosh = new Howl({\n    src: [StompySlosh],\n  });\n  const stutterBreakbeats = new Howl({\n    src: [StutterBreakbeats],\n  });\n  const [pads, setPads] = useState([\n    {\n      sound: bass,\n      isPlay: false,\n      icon: GiGuitar,\n    },\n    {\n      sound: futureFunkBeats,\n      isPlay: false,\n      icon: SiElectron,\n    },\n    {\n      sound: grooveTanggu,\n      isPlay: false,\n      icon: GiOilDrum,\n    },\n    {\n      sound: mazePolitics,\n      isPlay: false,\n      icon: GiVortex,\n    },\n    {\n      sound: pasGroove,\n      isPlay: false,\n      icon: GiMusicalKeyboard,\n    },\n    {\n      sound: electricGuitar,\n      isPlay: false,\n      icon: FaGuitar,\n    },\n    {\n      sound: silentStarOrganSynth,\n      isPlay: false,\n      icon: GiGasMask,\n    },\n    {\n      sound: stutterBreakbeats,\n      isPlay: false,\n      icon: FaRegClock,\n    },\n    {\n      sound: stompySlosh,\n      isPlay: false,\n      icon: GiDrum,\n    },\n  ]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      pressPlay();\n    }\n  }, [isLoopEnd]);\n\n  // create array of the upcoming loop on next loop cycle\n  const nextLoop = pads\n    .filter((pad) => {\n      return pad.isPlay;\n    })\n    .map((playing) => playing.sound);\n\n  // stop current loop and starts a new loop\n  const pressPlay = () => {\n    if (!soundsOn && !nextLoop) {\n      return;\n    }\n    soundsOn?.forEach((howl) => {\n      howl.stop();\n    });\n    nextLoop[0].once('end', () => {\n      setIsLoopEnd(!isLoopEnd);\n    });\n    nextLoop.forEach((howl) => {\n      howl.play();\n    });\n    setSoundsOn(nextLoop);\n    setIsPlaying(true);\n  };\n\n  // stop loop\n  const pressStop = () => {\n    setIsPlaying(false);\n    soundsOn.forEach((howl) => {\n      howl.stop();\n    });\n  };\n\n  return (\n    <div className=\"pads\">\n      <div className=\"container\">\n        {pads.map((pad, index) => (\n          <Loop\n            key={`pad${index}`}\n            padsData={pad}\n            padsArr={pads}\n            setPadsArr={setPads}\n          />\n        ))}\n      </div>\n      <div className=\"control-panel\">\n        <FaPlay\n          onClick={pressPlay}\n          className={isPlaying ? 'on play' : 'off play'}\n        />\n        <FaStop\n          onClick={pressStop}\n          className={isPlaying ? 'on play' : 'off play'}\n        />\n      </div>\n    </div>\n  );\n};\n","import './Home.scss';\nimport React from 'react';\nimport { Pads } from '../../cmps/Pads';\n\nexport const Home = () => {\n  return (\n    <div className=\"hero-container\">\n      <Pads></Pads>\n    </div>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport { FaHome } from 'react-icons/fa';\nimport { SiLoop } from 'react-icons/si';\nimport { BsInfo } from 'react-icons/bs';\n\nimport './Header.scss';\n\nexport const Header = (props) => {\n  return (\n    <header className=\"app-header\">\n      <NavLink\n        className=\"flex align-center justify-center\"\n        exact\n        to=\"/\"\n        activeClassName=\"active-nav\"\n      >\n        <SiLoop className=\"icon\" />\n        <h1>Looper</h1>\n      </NavLink>\n\n      <ul className=\"navbar-header\">\n        <NavLink exact to=\"/\" activeClassName=\"active-nav\">\n          <FaHome className=\"icon\" />\n        </NavLink>\n        <NavLink to=\"/about\" activeClassName=\"active-nav\">\n          <BsInfo className=\"icon\" />\n        </NavLink>\n      </ul>\n    </header>\n  );\n};\n","import { Component } from 'react';\n\nimport './About.scss';\n\nexport class About extends Component {\n  render() {\n    return (\n      <div className=\"about\">\n        <p className=\"title\"> About Looper</p>\n        <p className=\"container\">\n          Welcome to the looper. What is a looper? <br />\n          An app where you can play yourself different samples with some\n          different sounds. <br /> to play a sound you need to click on him and\n          then click the play button and stop any sample, when ever you want .{' '}\n          <br /> The first sample will play automatically, but the rest of the\n          samples will start when the first sample will end. Every sample cycle\n          is 8 seconds.\n          <br /> Enjoy combining different samples and sound and let the music\n          begin !!\n        </p>\n      </div>\n    );\n  }\n}\n","import { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Home } from './pages/Home/Home';\nimport { Header } from './cmps/Header';\nimport { About } from './pages/About';\nimport './App.scss';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header></Header>\n        <Switch>\n          <Route component={About} path=\"/about\"></Route>\n          <Route component={Home} path=\"/\"></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}